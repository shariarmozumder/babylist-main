{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport * as reducers from './ducks';\nexport default function configureStore() {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const appReducer = combineReducers(reducers);\n\n  const rootReducer = (state, action) => appReducer(state, action);\n\n  const composeEnhancers = composeWithDevTools({});\n  return createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\n}","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","composeWithDevTools","thunk","reducers","configureStore","initialState","appReducer","rootReducer","state","action","composeEnhancers"],"sources":["C:/project/React project/babylist/src/state/store.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport * as reducers from './ducks';\n\nexport default function configureStore(initialState = {}) {\n  const appReducer = combineReducers(reducers);\n  const rootReducer = (state, action) => appReducer(state, action);\n  const composeEnhancers = composeWithDevTools({});\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,SAA1B;AAEA,eAAe,SAASC,cAAT,GAA2C;EAAA,IAAnBC,YAAmB,uEAAJ,EAAI;EACxD,MAAMC,UAAU,GAAGN,eAAe,CAACG,QAAD,CAAlC;;EACA,MAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmBH,UAAU,CAACE,KAAD,EAAQC,MAAR,CAAjD;;EACA,MAAMC,gBAAgB,GAAGT,mBAAmB,CAAC,EAAD,CAA5C;EAEA,OAAOH,WAAW,CAChBS,WADgB,EAEhBF,YAFgB,EAGhBK,gBAAgB,CAACX,eAAe,CAACG,KAAD,CAAhB,CAHA,CAAlB;AAKD"},"metadata":{},"sourceType":"module"}