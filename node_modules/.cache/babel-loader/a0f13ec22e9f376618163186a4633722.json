{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\React project\\\\babylist-main\\\\src\\\\components\\\\ListItem\\\\ListItem.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { toggleComplete } from '../../state/ducks/ui/actions';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_TYPE = 'CARD';\n\nconst ListItem = props => {\n  _s();\n\n  const ref = useRef(null);\n  const {\n    id,\n    name,\n    complete,\n    moveCard,\n    index\n  } = props;\n  const dispatch = useDispatch();\n  const [{\n    handlerId\n  }, drop] = useDrop({\n    accept: ITEM_TYPE,\n\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId()\n      };\n    },\n\n    hover(item, monitor) {\n      var _ref$current;\n\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = index; // Don't replace items with themselves\n\n      if (dragIndex === hoverIndex) {\n        return;\n      } // Determine rectangle on screen\n\n\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect(); // Get vertical middle\n\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2; // Determine mouse position\n\n      const clientOffset = monitor.getClientOffset(); // Get pixels to the top\n\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top; // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      } // Dragging upwards\n\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      } // Time to actually perform the action\n\n\n      moveCard(dragIndex, hoverIndex); // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n\n      item.index = hoverIndex;\n    }\n\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ITEM_TYPE,\n    item: () => {\n      return {\n        id,\n        index\n      };\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const handleToggle = () => {\n    dispatch(toggleComplete(id));\n  };\n\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    ref: ref,\n    style: {\n      opacity\n    },\n    className: styles.item,\n    \"data-handler-id\": handlerId,\n    onClick: handleToggle,\n    children: !complete ? name : /*#__PURE__*/_jsxDEV(\"del\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListItem, \"O+v0GC+7b3Dcdx8WGhgjYCoPMy8=\", false, function () {\n  return [useDispatch, useDrop, useDrag];\n});\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["useRef","useDispatch","useDrag","useDrop","toggleComplete","styles","ITEM_TYPE","ListItem","props","ref","id","name","complete","moveCard","index","dispatch","handlerId","drop","accept","collect","monitor","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","type","handleToggle","opacity"],"sources":["C:/project/React project/babylist-main/src/components/ListItem/ListItem.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { toggleComplete } from '../../state/ducks/ui/actions';\n\nimport styles from './styles.module.css';\n\nconst ITEM_TYPE = 'CARD';\n\nconst ListItem = (props) => {\n  const ref = useRef(null);\n  const { id, name, complete, moveCard, index } = props;\n\n  const dispatch = useDispatch();\n\n  const [{ handlerId }, drop] = useDrop({\n    accept: ITEM_TYPE,\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: ITEM_TYPE,\n    item: () => {\n      return { id, index };\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const handleToggle = () => {\n    dispatch(toggleComplete(id));\n  };\n\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n\n  return (\n    <li\n      ref={ref}\n      style={{ opacity }}\n      className={styles.item}\n      data-handler-id={handlerId}\n      onClick={handleToggle}\n    >\n      {!complete ? name : <del>{name}</del>}\n    </li>\n  );\n};\n\nexport default ListItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}