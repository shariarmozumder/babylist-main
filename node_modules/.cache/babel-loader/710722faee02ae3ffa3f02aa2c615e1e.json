{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\React project\\\\babylist\\\\src\\\\components\\\\CreateForm\\\\CreateForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addName } from '../../state/ducks/ui/actions';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateForm = () => {\n  _s();\n\n  const [error, setError] = useState();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.target.name.value.trim();\n\n    if ((value === null || value === void 0 ? void 0 : value.length) > 0) {\n      const regex = /\\d+/g;\n      var matches = value.match(regex);\n\n      if (matches === null) {\n        var _value$split;\n\n        const wordLength = value === null || value === void 0 ? void 0 : (_value$split = value.split(' ')) === null || _value$split === void 0 ? void 0 : _value$split.length;\n\n        if (wordLength <= 2) {\n          dispatch(addName(value));\n          document.getElementById('create-form').reset();\n          setError(null);\n        } else {\n          setError('Name contain maximum two words');\n        }\n      } else {\n        setError('Only text is valid');\n      }\n    } else {\n      setError(\"Empty name can't create\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"create-form\",\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.input,\n        type: \"text\",\n        placeholder: \"Type name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateForm, \"tQBqIfff+LdDuTSpHsD1A7Szbco=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateForm;\nexport default CreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"names":["useState","useDispatch","addName","styles","CreateForm","error","setError","dispatch","handleSubmit","e","preventDefault","value","target","name","trim","length","regex","matches","match","wordLength","split","document","getElementById","reset","formWrapper","form","input","button"],"sources":["C:/project/React project/babylist/src/components/CreateForm/CreateForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addName } from '../../state/ducks/ui/actions';\n\nimport styles from './styles.module.css';\n\nconst CreateForm = () => {\n  const [error, setError] = useState();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const value = e.target.name.value.trim();\n    if (value?.length > 0) {\n      const regex = /\\d+/g;\n      var matches = value.match(regex);\n\n      if (matches === null) {\n        const wordLength = value?.split(' ')?.length;\n        if (wordLength <= 2) {\n          dispatch(addName(value));\n          document.getElementById('create-form').reset();\n          setError(null);\n        } else {\n          setError('Name contain maximum two words');\n        }\n      } else {\n        setError('Only text is valid');\n      }\n    } else {\n      setError(\"Empty name can't create\");\n    }\n  };\n  return (\n    <div className={styles.formWrapper}>\n      <form id='create-form' className={styles.form} onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          type='text'\n          placeholder='Type name'\n          name='name'\n        />\n        <button className={styles.button} type='submit'>\n          Create\n        </button>\n      </form>\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default CreateForm;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,OAAT,QAAwB,8BAAxB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;EAEA,MAAMO,QAAQ,GAAGN,WAAW,EAA5B;;EAEA,MAAMO,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACA,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASC,IAAT,CAAcF,KAAd,CAAoBG,IAApB,EAAd;;IACA,IAAI,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEI,MAAP,IAAgB,CAApB,EAAuB;MACrB,MAAMC,KAAK,GAAG,MAAd;MACA,IAAIC,OAAO,GAAGN,KAAK,CAACO,KAAN,CAAYF,KAAZ,CAAd;;MAEA,IAAIC,OAAO,KAAK,IAAhB,EAAsB;QAAA;;QACpB,MAAME,UAAU,GAAGR,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAES,KAAP,CAAa,GAAb,CAAH,iDAAG,aAAmBL,MAAtC;;QACA,IAAII,UAAU,IAAI,CAAlB,EAAqB;UACnBZ,QAAQ,CAACL,OAAO,CAACS,KAAD,CAAR,CAAR;UACAU,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC;UACAjB,QAAQ,CAAC,IAAD,CAAR;QACD,CAJD,MAIO;UACLA,QAAQ,CAAC,gCAAD,CAAR;QACD;MACF,CATD,MASO;QACLA,QAAQ,CAAC,oBAAD,CAAR;MACD;IACF,CAhBD,MAgBO;MACLA,QAAQ,CAAC,yBAAD,CAAR;IACD;EACF,CAtBD;;EAuBA,oBACE;IAAK,SAAS,EAAEH,MAAM,CAACqB,WAAvB;IAAA,wBACE;MAAM,EAAE,EAAC,aAAT;MAAuB,SAAS,EAAErB,MAAM,CAACsB,IAAzC;MAA+C,QAAQ,EAAEjB,YAAzD;MAAA,wBACE;QACE,SAAS,EAAEL,MAAM,CAACuB,KADpB;QAEE,IAAI,EAAC,MAFP;QAGE,WAAW,EAAC,WAHd;QAIE,IAAI,EAAC;MAJP;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAQ,SAAS,EAAEvB,MAAM,CAACwB,MAA1B;QAAkC,IAAI,EAAC,QAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAYGtB,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAZZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA5CD;;GAAMD,U;UAGaH,W;;;KAHbG,U;AA8CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}